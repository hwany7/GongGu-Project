<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="post">

	<!-- 히트 상품 가져오기 -->
	<select id="getHitPostFromMain" resultType="dto.join.HitPostDto">
		select * from 
			(select p.category_id,
       			c.category_name,
		        pp.post_id, 
		        pp.post_title,
		        pp.current_amount,
		        p.product_name,
		        p.thumbnail,
		        p.image,
		        row_number() over (partition by p.category_id
		        order by p.category_id, pp.current_amount desc) as ranking
		        from product_gg p, post_gg pp, category_gg c
		        where p.product_id = pp.product_id and p.category_id = c.category_id  and pp.post_status = 'A'
	 		)
	 		where ranking =1
 	</select>
 	
 	<!-- postContent 페이지에 보여줄 content -->
 	<select id="getPostContentFromContent" parameterType="int" resultType="dto.join.PostContentDto">
 		select *
		from (
		    select post_id, post_gg.product_id, category_name, post_title, post_status, 
		    		product_name, image, product_model, current_amount, default_price,content, payment_amount
		    from post_gg, product_gg, category_gg
		    where post_gg.product_id = product_gg.product_id 
		    		and product_gg.category_id = category_gg.category_id)
		where post_id=#{post_id}
 	</select>
 	
 	<!-- 신청 수량 초과 방어하기 위해 현재 진행 수량 가져오기 -->
	<select id="getCurrentamountFromApply" parameterType="int" resultType="int">
		select current_amount from post_gg where post_id = #{post_id}
	</select> 
	
	 <!-- 그리고 진행수량 -->
	<select id="getMinamountFromApply" parameterType="int" resultType="int">
		select minimum_amount from post_gg where post_id = #{post_id}
	</select>
	
 	<!-- 리뷰content 페이지에서 어떤 상품인지 가져오기 -->
  	<select id="getPayedPostFromReview" parameterType="int" resultType="dto.join.PayedPostDto">
 		select * 
		from (select thumbnail, payment_id, payment_gg.application_id, application_gg.post_id, 
					post_title, product_name, fixed_price*amount as total_price, 
					review_writable, paytime
        	from post_gg, product_gg, application_gg, payment_gg
        	where post_gg.post_id = application_gg.post_id
            	and post_gg.product_id = product_gg.product_id
            	and application_gg.application_id = payment_gg.application_id
            	and payment_id = #{payment_id})
 	</select>
 	
 	<!-- 게시글 전체 개수 -->
	<select id="getPostCount" resultType="int">
		select count(*) from post_gg
	</select>
	
	<!-- 전상품 다 나와있는 리스트(검색기능 포함) -->
 	<select id="getPostFromPostList" parameterType="util.PageInfo" resultType="dto.join.HitPostDto">
 		select * 
		from (select category_id,
		       category_name,
		       post_id, 
		       post_title,
		       current_amount,
		       content,
		       product_name,
		       thumbnail,
		       image,
		       rownum r
		    from (select p.category_id,
		            c.category_name,
		            pp.post_id, 
		            pp.post_title,
		            pp.current_amount,
		            pp.content,
		            p.product_name,
		            p.thumbnail,
		          	p.image,
		            pp.post_status
		            from product_gg p, post_gg pp, category_gg c
		            where p.product_id = pp.product_id and p.category_id = c.category_id
		            and (upper(pp.post_title) like upper('%'|| trim(#{search, jdbcType=VARCHAR}) ||'%') 
		            		or upper(p.product_name) like upper('%'|| trim(#{search, jdbcType=VARCHAR}) ||'%'))
      
		            order by post_status, post_id desc)
		        )
		where r &gt;= #{start} and r &lt;= #{end}
	</select>
	
	<!-- 검색된 게시글 전체 개수 -->
	<select id="getPostCountBySearch" parameterType="string" resultType="int">
		select count(*) from post_gg, product_gg where post_gg.product_id = product_gg.product_id 
														and (upper(post_title) like upper('%'|| #{search} ||'%') 
														or upper(product_name) like upper('%'|| #{search} ||'%'))
	</select>
	
	<!-- 카테고리별 list 만들기 위한 포스트 개수 -->
	<select id="getPostCountByCategory" parameterType="int" resultType="int">
		select count(*) 
		from post_gg 
		where product_id in (select product_id from product_gg where category_id=#{category_id})
	</select>
	
	<!-- 전상품 다 나와있는 카테고리 리스트(검색기능 포함) -->
 	<select id="getPostFromPostListByCategory" parameterType="util.PageInfo" resultType="dto.join.HitPostDto">
 		select * 
		from (select category_id,
		       category_name,
		       post_id, 
		       post_title,
		       current_amount,
		       content,
		       product_name,
		       thumbnail,
		       image,
		       rownum r
		    from (select p.category_id,
		            c.category_name,
		            pp.post_id, 
		            pp.post_title,
		            pp.current_amount,
		            pp.content,
		            p.product_name,
		            p.thumbnail,
		          	p.image,
		            pp.post_status
		            from product_gg p, post_gg pp, category_gg c
		            where p.product_id = pp.product_id 
		            			and p.category_id = c.category_id 
		            			and p.category_id = #{category_id}
		            			and (upper(pp.post_title) like upper('%'|| trim(#{search, jdbcType=VARCHAR}) ||'%') or upper(p.product_name) like upper('%'|| trim(#{search, jdbcType=VARCHAR}) ||'%'))
		            order by post_status, post_id desc)
		        )
		where r &gt;= #{start} and r &lt;= #{end}
	</select>
	

	
	

</mapper>